[2015-06-15 13:05:26] requirements_osx_brew_libs_install
requirements_osx_brew_libs_install () 
{ 
    brew unlink "$@" || true;
    brew install "$@" || { 
        \typeset ret=$?;
        rvm_warn "There were package installation errors, make sure to read the log.

Try \`brew tap --repair\` and make sure \`brew doctor\` looks reasonable.

Check Homebrew requirements https://github.com/Homebrew/homebrew/wiki/Installation";
        case "$_system_version" in 
            10.6)
                rvm_warn "
On OSX 10.6 instead of command line tools install:
    https://github.com/downloads/kennethreitz/osx-gcc-installer/GCC-10.6.pkg"
            ;;
        esac;
        return $ret
    }
}
current path: /usr/local
PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/Users/ishan/.rvm/bin
command(9): requirements_osx_brew_libs_install autoconf automake libtool pkg-config libyaml readline libksba openssl
++ brew unlink autoconf automake libtool pkg-config libyaml readline libksba openssl
Error: No such keg: /usr/local/Cellar/autoconf
++ true
++ brew install autoconf automake libtool pkg-config libyaml readline libksba openssl
==> Downloading https://homebrew.bintray.com/bottles/autoconf-2.69.yosemite.bottle.1.tar.gz
==> Pouring autoconf-2.69.yosemite.bottle.1.tar.gz
🍺  /usr/local/Cellar/autoconf/2.69: 70 files, 3.1M
==> Downloading https://homebrew.bintray.com/bottles/automake-1.15.yosemite.bottle.tar.gz
==> Pouring automake-1.15.yosemite.bottle.tar.gz
🍺  /usr/local/Cellar/automake/1.15: 130 files, 3.2M
==> Downloading https://homebrew.bintray.com/bottles/libtool-2.4.6.yosemite.bottle.tar.gz
==> Pouring libtool-2.4.6.yosemite.bottle.tar.gz
==> Caveats
In order to prevent conflicts with Apple's own libtool we have prepended a "g"
so, you have instead: glibtool and glibtoolize.
==> Summary
🍺  /usr/local/Cellar/libtool/2.4.6: 69 files, 3.8M
==> Downloading https://homebrew.bintray.com/bottles/pkg-config-0.28.yosemite.bottle.2.tar.gz
==> Pouring pkg-config-0.28.yosemite.bottle.2.tar.gz
🍺  /usr/local/Cellar/pkg-config/0.28: 10 files, 612K
==> Downloading https://homebrew.bintray.com/bottles/libyaml-0.1.6_1.yosemite.bottle.tar.gz
==> Pouring libyaml-0.1.6_1.yosemite.bottle.tar.gz
🍺  /usr/local/Cellar/libyaml/0.1.6_1: 7 files, 352K
==> Downloading https://homebrew.bintray.com/bottles/readline-6.3.8.yosemite.bottle.tar.gz
Already downloaded: /Library/Caches/Homebrew/readline-6.3.8.yosemite.bottle.tar.gz
==> Pouring readline-6.3.8.yosemite.bottle.tar.gz
==> Caveats
This formula is keg-only, which means it was not symlinked into /usr/local.

Mac OS X provides similar software, and installing this software in
parallel can cause all kinds of trouble.

OS X provides the BSD libedit library, which shadows libreadline.
In order to prevent conflicts when programs look for libreadline we are
defaulting this GNU Readline installation to keg-only.

Generally there are no consequences of this for you. If you build your
own software and it requires this formula, you'll need to add to your
build variables:

    LDFLAGS:  -L/usr/local/opt/readline/lib
    CPPFLAGS: -I/usr/local/opt/readline/include

==> Summary
🍺  /usr/local/Cellar/readline/6.3.8: 40 files, 2.1M
==> Installing libksba dependency: libgpg-error
==> Downloading https://homebrew.bintray.com/bottles/libgpg-error-1.19.yosemite.bottle.tar.gz
==> Pouring libgpg-error-1.19.yosemite.bottle.tar.gz
🍺  /usr/local/Cellar/libgpg-error/1.19: 17 files, 352K
==> Installing libksba
==> Downloading https://homebrew.bintray.com/bottles/libksba-1.3.3.yosemite.bottle.tar.gz
==> Pouring libksba-1.3.3.yosemite.bottle.tar.gz
🍺  /usr/local/Cellar/libksba/1.3.3: 12 files, 372K
==> Downloading https://homebrew.bintray.com/bottles/openssl-1.0.2c.yosemite.bottle.tar.gz
==> Pouring openssl-1.0.2c.yosemite.bottle.tar.gz
==> Caveats
A CA file has been bootstrapped using certificates from the system
keychain. To add additional certificates, place .pem files in
  /usr/local/etc/openssl/certs

and run
  /usr/local/opt/openssl/bin/c_rehash

This formula is keg-only, which means it was not symlinked into /usr/local.

Mac OS X already provides this software and installing another version in
parallel can cause all kinds of trouble.

Apple has deprecated use of OpenSSL in favor of its own TLS and crypto libraries

Generally there are no consequences of this for you. If you build your
own software and it requires this formula, you'll need to add to your
build variables:

    LDFLAGS:  -L/usr/local/opt/openssl/lib
    CPPFLAGS: -I/usr/local/opt/openssl/include

==> Summary
🍺  /usr/local/Cellar/openssl/1.0.2c: 463 files, 18M
